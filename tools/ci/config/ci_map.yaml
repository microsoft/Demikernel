catcollar:
  tcp_echo:
    scenario0:
      bufsize: 64
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario1:
      bufsize: 64
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario2:
      bufsize: 1024
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario3:
      bufsize: 1024
      nclients: 1
      nrequests: 1024
      run_mode: sequential
  tcp_close:
    scenario0:
      nclients: 32
      run_mode: sequential
      who_closes: client
    scenario1:
      nclients: 32
      run_mode: sequential
      who_closes: server
    scenario2:
      nclients: 32
      run_mode: concurrent
      who_closes: client
    scenario3:
      nclients: 32
      run_mode: concurrent
      who_closes: server
  tcp_ping_pong: {}
  tcp_push_pop: {}
  udp_ping_pong: {}
  udp_push_pop: {}
catmem:
  pipe_open: {}
  pipe_ping_pong: {}
  pipe_push_pop: {}
catloop:
  tcp_echo:
    scenario0:
      bufsize: 64
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario1:
      bufsize: 64
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario2:
      bufsize: 1024
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario3:
      bufsize: 1024
      nclients: 1
      nrequests: 1024
      run_mode: sequential
  tcp_close:
    scenario0:
      nclients: 1
      run_mode: sequential
      who_closes: client
    scenario1:
      nclients: 1
      run_mode: sequential
      who_closes: server
    scenario2:
      nclients: 1
      run_mode: concurrent
      who_closes: client
    scenario3:
      nclients: 1
      run_mode: concurrent
      who_closes: server
  tcp_wait:
    scenario0:
      nclients: 1
      scenario: push_close_wait
    scenario1:
      nclients: 1
      scenario: push_async_close_wait
    scenario2:
      nclients: 1
      scenario: push_async_close_pending_wait
    scenario3:
      nclients: 1
      scenario: pop_close_wait
    scenario4:
      nclients: 1
      scenario: pop_async_close_wait
    scenario5:
      nclients: 1
      scenario: pop_async_close_pending_wait
  tcp_ping_pong: {}
  tcp_push_pop: {}
catnap:
  tcp_close:
    scenario0:
      nclients: 32
      run_mode: sequential
      who_closes: client
    scenario1:
      nclients: 32
      run_mode: sequential
      who_closes: server
    scenario2:
      nclients: 32
      run_mode: concurrent
      who_closes: client
    scenario3:
      nclients: 32
      run_mode: concurrent
      who_closes: server
  tcp_echo:
    scenario0:
      bufsize: 64
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario1:
      bufsize: 64
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario2:
      bufsize: 1024
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario3:
      bufsize: 1024
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario4:
      bufsize: 64
      nclients: 32
      nrequests: 128
      run_mode: concurrent
    scenario5:
      bufsize: 64
      nclients: 32
      nrequests: 1024
      run_mode: concurrent
    scenario6:
      bufsize: 1024
      nclients: 32
      nrequests: 128
      run_mode: concurrent
    scenario7:
      bufsize: 1024
      nclients: 32
      nrequests: 1024
      run_mode: concurrent
  tcp_ping_pong: {}
  tcp_push_pop: {}
  tcp_wait:
    scenario0:
      nclients: 32
      scenario: push_close_wait
    scenario1:
      nclients: 32
      scenario: push_async_close_wait
    scenario2:
      nclients: 32
      scenario: push_async_close_pending_wait
    scenario3:
      nclients: 32
      scenario: pop_close_wait
    scenario4:
      nclients: 32
      scenario: pop_async_close_wait
    scenario5:
      nclients: 32
      scenario: pop_async_close_pending_wait
  udp_ping_pong: {}
  udp_push_pop: {}
catnip:
  tcp_ping_pong: {}
  tcp_push_pop: {}
  udp_ping_pong: {}
  udp_push_pop: {}
  tcp_echo:
    scenario0:
      bufsize: 64
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario1:
      bufsize: 64
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario2:
      bufsize: 1024
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario3:
      bufsize: 1024
      nclients: 1
      nrequests: 1024
      run_mode: sequential
catpowder:
  tcp_ping_pong: {}
  tcp_push_pop: {}
  udp_ping_pong: {}
  udp_push_pop: {}
  tcp_echo:
    scenario0:
      bufsize: 64
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario1:
      bufsize: 64
      nclients: 1
      nrequests: 1024
      run_mode: sequential
    scenario2:
      bufsize: 1024
      nclients: 1
      nrequests: 128
      run_mode: sequential
    scenario3:
      bufsize: 1024
      nclients: 1
      nrequests: 1024
      run_mode: sequential
